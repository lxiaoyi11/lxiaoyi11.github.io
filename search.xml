<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机操作系统</title>
      <link href="/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/03/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机操作系统"><a href="#计算机操作系统" class="headerlink" title="计算机操作系统"></a>计算机操作系统</h1><h2 id="第一章-操作系统引论"><a href="#第一章-操作系统引论" class="headerlink" title="第一章 操作系统引论"></a>第一章 操作系统引论</h2><h3 id="1-操作系统的目标"><a href="#1-操作系统的目标" class="headerlink" title="1.操作系统的目标"></a>1.操作系统的目标</h3><p><strong>在操作系统上配置操作系统，其主要目标是：方便性，有效性，可扩充性和开放性</strong></p><ul><li><p>方便性：系统使用编译命令将用户采用高级语言书写的程序翻译成机器代码，或者直接通过OS所提供的各种命令操纵计算机</p></li><li><p>有效性：提高了系统资源的利用率和吞吐量</p></li><li><p>可扩充性：无结构→模块化结构→层次化结构→微内核结构</p></li><li><p>​                    微内核结构能方便地增添新的功能和模块，以及对原来的功能和模块进行修改，具有很好的可扩充性</p></li><li><p>开放性：指系统能遵循世界标准规范，特别是遵循开放系统互连OSI国际标准</p></li></ul><h3 id="2-操作系统的作用"><a href="#2-操作系统的作用" class="headerlink" title="2.操作系统的作用"></a>2.操作系统的作用</h3><p>（<strong>1）OS作为用户和计算机硬件系统之间的接口</strong></p><p>​            用户使用计算机的方式：命令方式，系统调用方式，图标-窗口方式</p><p><strong>（2）OS作为计算机系统资源的管理者</strong></p><table><thead><tr><th>处理机管理</th><th>用于分配和控制处理机</th></tr></thead><tbody><tr><td><strong>存储器管理</strong></td><td><strong>主要负责内存的分配和回收</strong></td></tr><tr><td><strong>I&#x2F;O设备管理</strong></td><td><strong>负责I&#x2F;O设备的分配（回收）与操纵</strong></td></tr><tr><td><strong>文件管理</strong></td><td><strong>用于实现对文件的存取，共享和保护</strong></td></tr></tbody></table><p><strong>（3）OS实现了对计算机资源的抽象</strong></p><p>​            在裸机上铺设的I&#x2F;O软件隐藏了I&#x2F;O设备的具体细节，向上提供了一组抽象的I&#x2F;O设备</p><h3 id="3-推动操作系统发展的主要动力"><a href="#3-推动操作系统发展的主要动力" class="headerlink" title="3.推动操作系统发展的主要动力"></a>3.推动操作系统发展的主要动力</h3><ul><li>不断提高的计算机资源利用率</li><li>方便用户</li><li>器件的不算更新换代</li><li>计算机体系结构的不断发展</li><li>不断提出新的应用需求</li></ul><h3 id="4-操作系统的发展过程"><a href="#4-操作系统的发展过程" class="headerlink" title="4.操作系统的发展过程"></a>4.操作系统的发展过程</h3><h4 id="（1）未配置操作系统的计算机系统"><a href="#（1）未配置操作系统的计算机系统" class="headerlink" title="（1）未配置操作系统的计算机系统"></a><strong>（1）未配置操作系统的计算机系统</strong></h4><table><thead><tr><th>人工操作方式（存在人机矛盾→严重降低了计算机资源的利用率）</th><th>用户独占全机</th></tr></thead><tbody><tr><td></td><td><strong>CPU等待人工操作</strong></td></tr><tr><td><strong>脱机输入&#x2F;输出（Off-Line O&#x2F;I）方式</strong></td><td><strong>减少了CPU的空闲时间</strong></td></tr><tr><td></td><td><strong>提高了I&#x2F;O速度</strong></td></tr></tbody></table><h4 id="（2）单道批处理系统"><a href="#（2）单道批处理系统" class="headerlink" title="（2）单道批处理系统"></a><strong>（2）单道批处理系统</strong></h4><ul><li><p>处理过程：先把作业以脱机的方式输入到磁带上，并在系统中配上监督程序（Monitor），在它的控制下，使这批作业一个接一个地连续处理，<u>虽然系统对作业的处理使成批进行的，但是在内存中始终只保持一道作业。</u></p></li><li><p>缺点：（1）内存中只有一道程序，该程序在运行中发出请求后，CPU便处于等待状态</p><p>​            （2）I&#x2F;O设备的低速</p></li></ul><h4 id="（3）多道批处理系统"><a href="#（3）多道批处理系统" class="headerlink" title="（3）多道批处理系统"></a><strong>（3）多道批处理系统</strong></h4><ul><li><p>基本概念：在该系统中，用户所提交的作业先存放在外存上，并排成一个队列，称为”后备队列“。然后由作业调度程序按一定的算法，从后备队列中选择若干个作业调入内存，使他们共享CPU和系统中的各种资源</p></li><li><p>优点：a.资源利用率高</p><p>​            b.系统的吞吐量大</p></li><li><p>缺点：a.平均周转时间长</p><p>​            b.无交互能力：用户一旦把作业提交给系统后，直至作业完成，用户都不能与自己的作业进行交互，修改和调试程序都不                                            方便</p></li><li><p>需要处理的问题：</p></li></ul><p>​            a.处理机争用问题</p><p>​            b.内存分配和保护问题</p><p>​            c. I&#x2F;O设备分配问题</p><p>​            d.文件的组织和管理问题</p><p>​            e.作业管理问题</p><p>​            f.用户与系统的接口问题</p><h4 id="（4）分时系统"><a href="#（4）分时系统" class="headerlink" title="（4）分时系统"></a><strong>（4）分时系统</strong></h4><p>及时接收：配置多路卡，实现粉饰多路复用</p><p>​                    配置缓冲区，用来暂存用户键入的命令（或数据）</p><p>及时处理：采用作业直接进入内存</p><p>​                    采用轮转运行方式</p><p>分时系统的特征：</p><ul><li>多路性：允许多个用户共享一台主机</li><li>独立性：每个用户在各自的终端上进行操作彼此之间互不干扰</li><li>及时性：用户的请求在很短的时间内获得响应</li><li>交互性:用户可以在终端与系统进行广泛的人机对话</li></ul><h4 id="（5）实时系统"><a href="#（5）实时系统" class="headerlink" title="（5）实时系统"></a><strong>（5）实时系统</strong></h4><p>最主要特征：将时间作为参数，它必须对所接收到的某些信号做出”及时“或”实时“的反映</p><p>实时系统的类型： a. 工业（武器）控制系统</p><p>​                                b. 信息查询系统</p><p>​                                c. 多媒体系统</p><p>​                                d. 嵌入式系统</p><p>实时任务的类型：</p><table><thead><tr><th align="center"><strong>周期性实时任务</strong></th><th align="center"><strong>指定它在指定循环执行，以便周期性的控制外部设备</strong></th></tr></thead><tbody><tr><td align="center"><strong>非周期性实时任务</strong></td><td align="center"><strong>无明显的周期性</strong></td></tr></tbody></table><table><thead><tr><th><strong>硬实时任务</strong></th><th><strong>系统必须满足任务对截止时间的要求，否则可能出现难以预测的后果</strong></th></tr></thead><tbody><tr><td><strong>软实时任务</strong></td><td><strong>联系一个截止时间，但并不严格，偶尔错过了任务的截止时间，对系统产生的影响也不会太大</strong></td></tr></tbody></table><p>✨实时系统与分时系统相比具有<u>高度可靠性</u>，因为任何差错都可能带来无法预料的灾难性后果，因此，在实时系统中，往往都采用了多级容错措施来保障系统的安全性及数据的安全性</p><h3 id="5-微机操作系统的发展"><a href="#5-微机操作系统的发展" class="headerlink" title="5.微机操作系统的发展"></a>5.微机操作系统的发展</h3><p>定义：配置在微型机上的操作系统称为微机操作系统</p><p>按运行方式分类：</p><ul><li>单用户单任务操作系统：只允许一个用户上机，且只允许用户程序作为一个任务运行</li><li>单用户多任务操作系统：只允许一个用户上机，但允许用户把程序分为若干个任务，使他们并发执行，有效地改善了系统的性能</li><li>多用户多任务操作系统：允许多个用户通过各自的终端，使用同一台机器，共享主机系统中的各种资源，而每个用户程序又可以进一步分为几个任务，使他们能并发执行，从而进一步提供资源利用率和系统吞吐量</li></ul><h3 id="6-操作系统的基本特性"><a href="#6-操作系统的基本特性" class="headerlink" title="6.操作系统的基本特性"></a>6.操作系统的基本特性</h3><p>操作系统共同的基本特征：并发，共享，虚拟，异步</p><h4 id="（1）并发（Concurrence）"><a href="#（1）并发（Concurrence）" class="headerlink" title="（1）并发（Concurrence）"></a><strong>（1）并发（Concurrence）</strong></h4><p>并发和并行的区别：</p><table><thead><tr><th align="center"><strong>并行</strong></th><th align="center"><strong>两个或多个事件在同一时刻发生</strong></th></tr></thead><tbody><tr><td align="center"><strong>并发</strong></td><td align="center"><strong>两个或多个事件在同一时间间隔发生</strong></td></tr></tbody></table><p>进程：指在系统中能独立运行并作为资源分配的基本单位</p><p>✨多个进程之间可以并发执行和交换信息</p><h4 id="（2）共享（Sharing）"><a href="#（2）共享（Sharing）" class="headerlink" title="（2）共享（Sharing）"></a><strong>（2）共享（Sharing）</strong></h4><p>在OS环境下的资源共享（或资源复用）是指系统中的资源可供内存中多个并发执行的进程共同使用</p><p>实现资源共享的方式：</p><ul><li>互斥共享方式：在一段时间内只允许一个进程访问</li><li>同时访问方式：在宏观上是“同时”，在微观上这些进程对该资源的访问是交替进行的</li></ul><h4 id="（3）虚拟（Virtual）"><a href="#（3）虚拟（Virtual）" class="headerlink" title="（3）虚拟（Virtual）"></a><strong>（3）虚拟（Virtual）</strong></h4><p>定义：在OS中，把通过某种技术将一个<u>物理实体</u>变为若干个<u>逻辑上的对应物</u>的功能称为虚拟</p><p>实现虚拟的技术：</p><table><thead><tr><th><strong>时分复用技术</strong></th><th><strong>利用处理机的空闲时间运行其他程序，提高了处理机的利用率</strong></th></tr></thead><tbody><tr><td><strong>空分复用技术</strong></td><td><strong>利用存储器的空闲空间分区域存放和运行其它的多道程序，以此来提高内存的利用率</strong></td></tr></tbody></table><h4 id="（4）异步（Asynchronism）"><a href="#（4）异步（Asynchronism）" class="headerlink" title="（4）异步（Asynchronism）"></a>（4）异步（Asynchronism）</h4><p>异步即不确定性，指进程的执行顺序和执行的时间具有不确定性，因此难以重新系统在某个时刻的状态</p><h3 id="7-操作系统的主要功能"><a href="#7-操作系统的主要功能" class="headerlink" title="7.操作系统的主要功能"></a>7.操作系统的主要功能</h3><h4 id="（1）处理机管理"><a href="#（1）处理机管理" class="headerlink" title="（1）处理机管理"></a>（1）处理机管理</h4><p><strong>处理机管理的主要功能有：创建和撤销进程，对诸多进程的运行进行协调，实现进程之间的信息交换，以及按照一定算法把处理及分配给进程</strong></p><ul><li><p>进程控制：为作业创建进程，撤销（终止）已结束的进程，以及控制进程在运行过程中的状态转换</p></li><li><p>进程同步：该机制的主要任务是为多个进程（含线程）的运行进行协调</p><p>​                    常用的协调方式：进程互斥方式：指诸进程在对临界资源进行访问时，应采用互斥方式</p><p>​                                                    进程同步方式：指在相互合作去完成共同任务的诸进程间，由同步机构对它们的执行次序加以协调</p></li><li><p>进程通信：实现相互合作进程之间的信息交换</p></li><li><p>调度：作业调度：（外存→内存）</p><p>​            进程调度：从进程的就绪队列中按照一定的算法选出一个进程，将处理及分配给它，并为它设置运行现场，使其投入执行</p></li></ul><h4 id="（2）存储器管理"><a href="#（2）存储器管理" class="headerlink" title="（2）存储器管理"></a>（2）存储器管理</h4><p><strong>存储器管理的主要功能：对内存的分配和回收，内存保护，地址映射和内存扩充等</strong></p><ul><li>内存分配：</li></ul><p>​        主要任务：a.为每道程序分配内存空间，使它们“各得其所”</p><p>​                            b. 提高存储器的利用率，尽量减少不可用的内存空间（碎片）</p><p>​                            c. 允许正在运行的程序申请附加的内存空间，以适应程序和数据动态增长的需要</p><p>​        实现内存分配的方式：a.静态分配方式</p><p>​                                                b. 动态分配方式</p><ul><li>内存保护：</li></ul><p>​        主要任务：a. 彼此互不干扰</p><p>​                            b.相互保密</p><ul><li>地址映射：</li></ul><p>​        将地址空间中的逻辑地址转换为内存空间中与之对应的物理地址</p><ul><li>内存扩充：</li></ul><p>​        内存扩充并非使从物理上去扩大内存的容量，而是借助与虚拟存储技术，从逻辑上扩充内存容量</p><h4 id="（3）设备管理"><a href="#（3）设备管理" class="headerlink" title="（3）设备管理"></a>（3）设备管理</h4><p><strong>设备管理具有缓冲管理，设备分配和设备处理以及虚拟设备等功能</strong></p><ul><li>缓冲管理</li></ul><p>​        在I&#x2F;O设备和CPU之间引入缓冲，则可有效地缓和CPU和I&#x2F;O设备速度不匹配的矛盾，提高CPU的利用率，进而提高系统的吞吐量</p><p>​        可通过<u>增加缓冲区容量</u>的办法来改善系统的性能</p><p>​        常见的缓冲区机制：</p><p>​                    a. 单缓冲机制</p><p>​                    b.双缓冲机制：能实现双向同时传送数据</p><p>​                    c.公用缓冲池机制：能供多个设备同时使用</p><ul><li>设备分配：</li></ul><p>​        设备分配的基本任务使根据用户进程的I&#x2F;O请求，系统现有资源情况以及按照某种设备分配策略，为之分配所需的设备</p><ul><li>设备处理：</li></ul><p>​        设备处理程序（设备驱动程序）的基本任务是<u>实现CPU和设备控制器站之间的通信</u>，即由CPU向设备控制器发出I&#x2F;O命令，要求它完成指定的I&#x2F;O操作；反之，由CPU接收从控制器发来的中断请求，并给予迅速的响应和相应的而处理</p><h4 id="（4）文件管理"><a href="#（4）文件管理" class="headerlink" title="（4）文件管理"></a>（4）文件管理</h4><p><strong>文件管理应具有对文件存储空间的管理，目录管理，文件的读&#x2F;写管理以及文件的共享和保护等功能</strong></p><h4 id="（5）操作系统与用户之间的接口"><a href="#（5）操作系统与用户之间的接口" class="headerlink" title="（5）操作系统与用户之间的接口"></a>（5）操作系统与用户之间的接口</h4><ul><li>用户接口：</li></ul><p>​        a. 联机用户接口：为联机用户提供，用户可用过先后键入不同命令的方式来实现对作业的控制，直到作为完成</p><p>​        b. 脱机用户接口：为批处理作业的用户提供</p><p>​        c. 图形用户接口：用户可通过菜单（或对话框）用移动鼠标玄策菜单项的方式取代命令的键入，以方便，快捷地完成对应用程序和文                                        件的操作</p><ul><li>程序接口：</li></ul><p>​        程序接口是为用户程序在执行中访问系统资源而设置的，<u>是用户程序取得操作系统服务的唯一途径</u></p><h4 id="（6）现在操作系统的新功能"><a href="#（6）现在操作系统的新功能" class="headerlink" title="（6）现在操作系统的新功能"></a>（6）现在操作系统的新功能</h4><ul><li>系统安全：认证技术，密码技术，访问控制技术，反病毒技术</li><li>网络的功能和服务：</li></ul><p>​                    a.网络通信：用于在源主机和目标主机之间，实现无差错的数据传输</p><p>​                    b.资源管理：对网络中的共享资源实施有效的管理，协调诸用户对共享资源的使用，保证数据的安全性和一致性</p><p>​                    c. 应用互操作：实现信息的互通性和信息的互用性</p><ul><li>支持多媒体：</li></ul><p>​            a.接纳控制功能</p><p>​            b. 实时调度</p><p>​            c. 多媒体文件的存储</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础课</title>
      <link href="/2022/02/28/Linux%E5%9F%BA%E7%A1%80%E8%AF%BE/"/>
      <url>/2022/02/28/Linux%E5%9F%BA%E7%A1%80%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux基础课"><a href="#Linux基础课" class="headerlink" title="Linux基础课"></a>Linux基础课</h1><h2 id="一-常用文件命令管理"><a href="#一-常用文件命令管理" class="headerlink" title="一.常用文件命令管理"></a>一.常用文件命令管理</h2><ul><li><p>ctrl +c  ： ( 1 ) 杀掉某个程序</p><p> ​                     ( 2 ) 取消命令，并且换</p></li><li><p>ctrl +u ：清空本行命令</p></li><li><p>tab键 ：可以补全命令和文件名</p></li><li><p>ls : 列出当前目录下所有文件</p></li><li><p>pwd ：显示当前路径</p></li><li><p>ls 文件名 -l ：看某一个文件的详细信息</p></li><li><p>ls 文件名 -hl ：人性化输出，使得输出的信息让人看起来更加的方便</p></li><li><p>ls -a ：显示隐藏文件（当文件名以点开头会被隐藏起来） 会显示当前目录和上层目录</p></li><li><p>ls -A ：显示隐藏文件，但不会显示当前目录和上层目录</p></li><li><p>.  ：一个点表示当前目录   </p></li><li><p>.. ：表示上层目录</p></li><li><p>cd ：进入某个目录   </p></li><li><p>cd.. ：返回上层目录    </p></li><li><p>cd - ：返回上一回呆过的目录</p></li><li><p>cp ：复制+粘贴+重命名    例：cp a b -r ：将a文件夹整个复制到b</p></li><li><p>mkdir ：创建一个文件夹</p></li><li><p>rm XXX ：删除普通文件      </p></li><li><p>rm XXX -r ：删除文件夹</p></li><li><p>touch ：创建一个文件</p></li><li><p>mv ：剪切+粘贴，还有重命名    </p></li><li><p>mv XXX YYY ：将XXX移动到YYY</p></li><li><p>cat ：展示文件内容</p></li></ul><h2 id="二-tmux和vim"><a href="#二-tmux和vim" class="headerlink" title="二.tmux和vim"></a>二.tmux和vim</h2><p><strong>1.tmux的作用：</strong></p><p>​        （1）分屏</p><p>​        （2）允许断开Terminal连接后，继续运行进程</p><p><strong>2.tmux的结构：</strong>一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane</p><p><strong>3.tmux的操作：</strong></p><p>​        （1）tmux：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框</p><p>​        （2）先按ctrl+a，再按%：将当前pane半分成左右两个pane</p><p>​        （3）先按ctrl+a，再按“：将当前pane半分成上下两个pane</p><p>​        （4）ctrl+d：关闭当前的Pane，如果当前window的所有pane均已关闭，则自动关闭window，如果当前session下的所有window均已关闭，则自动关闭session</p><p>​        （5）先按ctrl+a，再按方向键：选择当前的pane</p><p>​        （6）鼠标拖动pane之间的分割线，可以调整分割线的位置</p><p>​        （7）按住ctrl+a的同时按方向键，可以调整分割线的位置</p><p>​        （8）先按ctrl+a，再按z：将当前的pane全屏&#x2F;取消全屏</p><p>​        （9）先按ctrl+a，再按d：挂起当前的session</p><p>​        （10）tmux a ：打开之前挂起的session</p><p>​        （11）先按ctrl+a，再按s：选择其他session</p><ul><li><p>​                    方向键上：选择上一项，session&#x2F;window&#x2F;pane</p></li><li><p>​                    方向键下：选择下一项，session&#x2F;window&#x2F;pane</p></li><li><p>​                    方向键左：展开当前项，session&#x2F;window</p></li><li><p>​                    方向键右：闭合当前项，session&#x2F;window</p></li></ul><p>​        （12）先按ctrl+a，再按c：再当前的session中创建一个新的window</p><p>​        （13）先按ctrl+a，再按w：选择其他的window</p><p>​        （14）先按ctrl+a，再按PageUp：翻阅当前pane内的内容</p><p>​        （15）在tmux中选中文本时，需要按住shift键</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>读书分享</title>
      <link href="/2022/02/27/%E6%91%98%E6%8A%84/"/>
      <url>/2022/02/27/%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<ul><li><p>“想要精通某事，就必须对它真正上心；想在某个领域出类拔萃，必须为之痴迷。很对人说他们渴望成就伟大，却不愿为此做出必要牺牲。他们关心的事太多，无论重要与否，都浪费了太多精力，这没什么不好，归根结底，伟大并非常人所能企及。”<br>                                                                                                                                                                                                    —-科比</p></li><li><p>“黑夜里的你，拥有看不见的世界，和清晰的自己。”                                                                                                        </p><p>​                                                                                                                                                                                             —-博尔赫斯</p></li><li><p>“玫瑰即玫瑰，花香无意义。”                                                                                                                                                </p><p>​                                                                                                                                                                                                —-博尔赫斯</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/26/hello-world/"/>
      <url>/2022/02/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
